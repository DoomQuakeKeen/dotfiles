#!/usr/bin/env bash

# Meteo - a CLI Bash script to show meteo from wttr.in

# Copyright (c) 2018 DoomQuakeKeen <doomquakekeen@gmail.com>

#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

scriptVersion="1.0"

#########################################
# Static Variables and Common Functions #
#########################################
display_index=0

verif_lang=$(echo $LANG | cut -d "_" -f1)
verif_country=$(echo $LANG | cut -d "." -f1 | cut -d "_" -f2)

displayHelp () {
  if [ "$verif_lang" == "en" ]
  then
	  printf "Meteo - a CLI Bash script to show meteo from wttr.in.\n\n"
	  printf "Usage: ${0} [OPTIONAL FLAGS]\n\n"
	  printf "Options:\n"
    printf "   -m        Show phase of the moon.\n"
    printf "   -c        Define research country.\n"
    printf "   -t        Specified a town.\n"
	  printf "   -h or --help        Display this help then quit.\n"
	  printf "   --version           Display current script version and quit.\n"
  elif [ "$verif_lang" == "fr" ]
  then
	  printf "Meteo - a CLI Bash script to show meteo from wttr.in.\n\n"
	  printf "Utilisation : ${0} [OPTIONAL FLAGS]\n\n"
	  printf "Arguments :\n"
    printf "   -m        Affiche les phases de la lune.\n"
    printf "   -c        Définis le pays.\n"
    printf "   -t        Spécifie une ville.\n"
	  printf "   -h ou --help        Afficher l'aide puis quitter.\n"
	  printf "   --version           Afficher la version de ce script et quitter.\n"
  else
	  printf "Meteo - a CLI Bash script to show meteo from wttr.in.\n\n"
	  printf "Usage: ${0} [OPTIONAL FLAGS]\n\n"
	  printf "Options:\n"
    printf "   -m          Show phase of the moon.\n"
    printf "   -c        Define research country.\n"
    printf "   -t        Specified a town.\n"
	  printf "   -h or --help        Display this help then quit.\n"
	  printf "   --version           Display current script version and quit.\n"
  fi
}

displayVersion () {
	printf "Meteo - Version ${scriptVersion}\n"
	printf "Created by and licensed to DoomQuakeKeen <doomquakekeen@gmail.com>\n"
	printf "This is free software; see the source for copying conditions.  There is NO warranty; not even MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n"
}

function Moon () {
  if [ -z "$additional_lang" ]
  then
    clear
    curl wttr.in/moon?lang="$verif_lang"
    echo
  else
    clear
    curl wttr.in/moon?lang="$additional_lang"
    echo
  fi
}

function meteo () {
  if [ -z "$1" ]
  then
    echo "Vous devez renseigner un élément (lune ou ville)."
  else
    if [ -z "$3" ]
    then
      if [ -z "$2" ]
      then
        if [ "$1" ==  "moon" ] || [ "$1" == "Moon" ];
        then
          clear
          curl wttr.in/moon?lang=fr
          echo
        else
          clear
          curl wttr.in/"$1",France?lang=fr
          echo
        fi
      else
        clear
        curl wttr.in/"$1","$2"?lang=fr
        echo
      fi
    else
      if [ -z "$2" ]
      then
        if [ "$1" ==  "moon" ] || [ "$1" == "Moon" ];
        then
          clear
          curl wttr.in/moon?lang="$3"
          echo
        else
          clear
          curl wttr.in/"$1",France?lang="$3"
          echo
        fi
      else
        clear
        curl wttr.in/"$1","$2"?lang="$3"
        echo
      fi
    fi
  fi
}

#####################
# Begin Flags Phase
#####################

case $1 in
  --help) displayHelp; exit 0;;
  --version) displayVersion; exit 0;;
esac

while getopts ":h:m" flags; do
	case $flags in
		h) displayHelp; exit 0 ;;
		m) Moon; exit 0 ;;
		:) errorOut "Error: You're missing an argument somewhere. Exiting."; exit 1 ;;
		?) errorOut "Error: Invalid flag somewhere. Exiting."; exit 1 ;;
		*) errorOut "Error"; exit 1 ;;
	esac
done

###################
# End Flags Phase
###################
